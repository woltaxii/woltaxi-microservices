server:
  port: 8765
  undertow:
    threads:
      worker: 200
      io: 16
    buffer-size: 16384

spring:
  application:
    name: api-gateway
  
  cloud:
    gateway:
      # CORS Configuration
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
      
      # Default Filters
      default-filters:
        - AddRequestHeader=X-Gateway-Timestamp, ${timestamp}
        - AddRequestHeader=X-Gateway-Version, 2.0.0
        - RemoveRequestHeader=Cookie
        
      # Discovery Configuration
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          
  # Redis Configuration for Rate Limiting
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:woltaxi_redis_2024}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 5
          min-idle: 1

# Eureka Configuration
eureka:
  client:
    service-url:
      defaultZone: http://woltaxi-admin:woltaxi-2024-secure@${EUREKA_HOST:localhost}:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    metadata-map:
      version: "2.0.0"
      service-type: "api-gateway"
      cluster: "woltaxi-main"

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway,refresh
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      user-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      ride-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      driver-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5

# Logging Configuration
logging:
  level:
    org.springframework.cloud.gateway: INFO
    org.springframework.security: INFO
    com.woltaxi.gateway: DEBUG
    reactor.netty.http.client: INFO
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

# WOLTAXI Gateway Configuration
woltaxi:
  gateway:
    version: "2.0.0"
    
    # Rate Limiting
    rate-limit:
      enabled: true
      requests-per-second: 100
      burst-capacity: 200
      replenish-rate: 50
      
    # Security
    security:
      jwt-secret: ${JWT_SECRET:woltaxi-gateway-secret-2024-enterprise}
      cors-enabled: true
      csrf-disabled: true
      
    # Timeout Configuration
    timeout:
      connect: 5000
      response: 30000
      
    # Retry Configuration
    retry:
      max-attempts: 3
      backoff-delay: 1000
      
    # Health Check
    health:
      check-interval: 30
      timeout: 10
      
    # Monitoring
    monitoring:
      enabled: true
      metrics-export: true
      logging-enabled: true