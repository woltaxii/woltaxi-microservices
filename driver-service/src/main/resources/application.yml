server:
  port: 8083
  undertow:
    threads:
      worker: 100
      io: 8

spring:
  application:
    name: driver-service
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/woltaxi_drivers
    username: ${DB_USERNAME:woltaxi_user}
    password: ${DB_PASSWORD:woltaxi_2024}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1800000
    
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
    
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:woltaxi_redis_2024}
    database: 2
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 10
        max-idle: 5
        min-idle: 1
    
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
    consumer:
      group-id: driver-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: latest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "com.woltaxi.driver.dto,com.woltaxi.common.dto"
    
  security:
    jwt:
      secret: ${JWT_SECRET:woltaxi-driver-secret-2024-enterprise}
      expiration: 86400000
      refresh-expiration: 604800000

# Eureka Configuration
eureka:
  client:
    service-url:
      defaultZone: http://woltaxi-admin:${EUREKA_PASSWORD:woltaxi-2024-secure}@${EUREKA_HOST:localhost}:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 10
    
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    metadata-map:
      version: "2.0.0"
      service-type: "driver-management"
      cluster: "woltaxi-main"
      zone: "primary"

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,refresh,beans,conditions
  endpoint:
    health:
      show-details: always
      show-components: always
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      sla:
        http.server.requests: 100ms, 200ms, 500ms

# Logging Configuration
logging:
  level:
    com.woltaxi.driver: DEBUG
    org.springframework.security: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.kafka: INFO
    org.springframework.data.redis: INFO
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

# WOLTAXI Driver Service Configuration
woltaxi:
  driver:
    version: "2.0.0"
    
    # Registration Settings
    registration:
      auto-approval: false
      document-verification: true
      background-check: true
      vehicle-inspection: true
      training-required: true
      
    # Location Tracking
    location:
      tracking-enabled: true
      update-interval-seconds: 5
      accuracy-threshold-meters: 10
      offline-timeout-minutes: 5
      
    # Vehicle Management
    vehicle:
      allowed-types: ["sedan", "suv", "minivan", "luxury", "electric", "hybrid"]
      inspection-valid-months: 6
      insurance-required: true
      registration-check: true
      
    # Availability Management
    availability:
      shift-duration-hours: 12
      break-duration-minutes: 30
      overtime-limit-hours: 16
      auto-offline-minutes: 15
      
    # Performance Metrics
    performance:
      rating-calculation: "weighted-average"
      min-rating-threshold: 4.0
      trips-for-rating: 10
      performance-review-trips: 100
      
    # Earnings
    earnings:
      commission-rate: 0.25
      weekly-payout: true
      minimum-payout: 100.0
      instant-payout-enabled: true
      
    # Notifications
    notifications:
      ride-request-timeout: 30
      earnings-updates: true
      performance-alerts: true
      system-announcements: true
      
    # Security
    security:
      session-timeout-minutes: 120
      max-login-attempts: 5
      lockout-duration-minutes: 30
      password-reset-token-expire-minutes: 15
      
    # Integration
    integration:
      mapping-service: "google-maps"
      payment-service: "stripe"
      notification-service: "firebase"
      analytics-service: "internal"
      
    # Cache Settings
    cache:
      driver-location-ttl: 300
      vehicle-info-ttl: 3600
      rating-cache-ttl: 1800
      availability-cache-ttl: 60