spring:
  application:
    name: wolkurye-service
  
  profiles:
    active: dev
    
  datasource:
    url: jdbc:postgresql://localhost:5432/woltaxi_wolkurye
    username: woltaxi_user
    password: woltaxi_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        generate_statistics: false
        spatial:
          connection_finder: org.hibernate.spatial.dialect.postgis.PostgisConnectionFinder

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: public
    
  redis:
    host: localhost
    port: 6379
    password: 
    database: 3
    jedis:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 1
        max-wait: -1ms
    timeout: 2000ms

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
    consumer:
      group-id: wolkurye-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "com.woltaxi.wolkurye.event"

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 2KB

  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: NON_NULL

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/woltaxi

server:
  port: 8093
  servlet:
    context-path: /api/v1/wolkurye
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    initial-instance-info-replication-interval-seconds: 30
    instance-info-replication-interval-seconds: 30
  instance:
    hostname: localhost
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      version: ${project.version}
      instanceId: ${spring.application.name}:${server.port}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,liquibase
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      sla:
        http.server.requests: 100ms, 200ms, 500ms, 1s, 2s

logging:
  level:
    com.woltaxi.wolkurye: DEBUG
    org.springframework.kafka: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: logs/wolkurye-service.log
    max-size: 100MB
    max-history: 30

# WolKurye Service Configuration
wolkurye:
  delivery:
    max-distance-km: 50
    max-weight-kg: 25
    price-per-km: 2.5
    base-price: 15.0
    express-multiplier: 1.5
    scheduled-multiplier: 0.8
    rush-hour-multiplier: 1.3
    weekend-multiplier: 1.2
    night-multiplier: 1.4
    
  rider:
    max-active-orders: 3
    default-radius-km: 15
    rating-threshold: 4.0
    completion-rate-threshold: 0.85
    
  tracking:
    update-interval-seconds: 30
    location-accuracy-meters: 50
    
  notification:
    sms:
      enabled: true
      provider: twilio
      from-number: "+90XXXXXXXXX"
    push:
      enabled: true
      provider: firebase
    email:
      enabled: true
      from: noreply@woltaxi.com
      
  integration:
    restaurant-apis:
      yemeksepeti:
        enabled: true
        api-url: https://api.yemeksepeti.com
        api-key: ${YEMEKSEPETI_API_KEY:}
      getir:
        enabled: true
        api-url: https://api.getir.com
        api-key: ${GETIR_API_KEY:}
      trendyol:
        enabled: true
        api-url: https://api.trendyol.com
        api-key: ${TRENDYOL_API_KEY:}
    
    pos-systems:
      iyzico:
        enabled: true
        api-url: https://api.iyzipay.com
        api-key: ${IYZICO_API_KEY:}
        secret-key: ${IYZICO_SECRET_KEY:}
      paytr:
        enabled: true
        api-url: https://www.paytr.com/odeme/api
        merchant-id: ${PAYTR_MERCHANT_ID:}
        merchant-key: ${PAYTR_MERCHANT_KEY:}
        merchant-salt: ${PAYTR_MERCHANT_SALT:}

  file:
    upload:
      path: uploads/wolkurye/
      max-size-mb: 10
      allowed-types: jpg,jpeg,png,pdf
      
  qr-code:
    enabled: true
    base-url: https://woltaxi.com/delivery/track/

# Third Party Services
twilio:
  account-sid: ${TWILIO_ACCOUNT_SID:}
  auth-token: ${TWILIO_AUTH_TOKEN:}
  from-number: ${TWILIO_FROM_NUMBER:+90XXXXXXXXX}

firebase:
  project-id: ${FIREBASE_PROJECT_ID:woltaxi-app}
  credentials-path: ${FIREBASE_CREDENTIALS_PATH:firebase-adminsdk.json}

google:
  maps:
    api-key: ${GOOGLE_MAPS_API_KEY:}
  
openweather:
  api-key: ${OPENWEATHER_API_KEY:}

---
spring:
  config:
    activate:
      on-profile: docker
      
  datasource:
    url: jdbc:postgresql://postgres:5432/woltaxi_wolkurye
    username: woltaxi_user
    password: woltaxi_password
    
  redis:
    host: redis
    port: 6379
    
  kafka:
    bootstrap-servers: kafka:9092

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    hostname: wolkurye-service
    
server:
  port: 8093

---
spring:
  config:
    activate:
      on-profile: test
      
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
    
  redis:
    host: localhost
    port: 6370
    
  kafka:
    bootstrap-servers: localhost:9093